{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet ContactComponent = class ContactComponent {\n  constructor(service, elementRef, messageService) {\n    this.service = service;\n    this.elementRef = elementRef;\n    this.messageService = messageService;\n    this.emailForm = new FormGroup({\n      name: new FormControl('', [Validators.minLength(4), Validators.required]),\n      email: new FormControl('', [Validators.email, Validators.required]),\n      body: new FormControl('', Validators.required)\n    });\n    this.buttonLabel = 'Send';\n    this.showSend = false;\n    this.invalidForm = true;\n  }\n  ngOnInit() {}\n  sendEmail() {\n    var _a, _b, _c;\n    if (this.emailForm.invalid) {\n      return;\n    }\n    this.email = {\n      name: (_a = this.emailForm.value.name) !== null && _a !== void 0 ? _a : '',\n      body: (_b = this.emailForm.value.body) !== null && _b !== void 0 ? _b : '',\n      email: (_c = this.emailForm.value.email) !== null && _c !== void 0 ? _c : ''\n    };\n    this.service.sendEmail(this.email).subscribe(response => {});\n    this.emailForm.reset();\n    this.confirm();\n  }\n  onClick() {\n    var _a, _b, _c;\n    if (this.emailForm.invalid) {\n      (_a = this.emailForm.get('name')) === null || _a === void 0 ? void 0 : _a.markAsDirty();\n      (_b = this.emailForm.get('email')) === null || _b === void 0 ? void 0 : _b.markAsDirty();\n      (_c = this.emailForm.get('body')) === null || _c === void 0 ? void 0 : _c.markAsDirty();\n      this.invalidForm = false;\n      return;\n    }\n    if (this.showSend) this.showSend = false;else this.showSend = true;\n    this.invalidForm = true;\n    const button = this.elementRef.nativeElement.querySelector('button');\n    button.classList.toggle('clicked');\n    this.sendEmail();\n    this.addSingle();\n    /*const buttonText = button.querySelector('p');*/\n    //buttonText.textContent = button.label === 'Tu mensaje se ha enviado' ? 'Enviar mensaje' : 'Tu mensaje se ha enviado';\n  }\n\n  addSingle() {\n    this.messageService.add({\n      severity: 'success',\n      summary: 'Mensaje enviado',\n      detail: 'Su mensaje a sido recibido exitosamente.'\n    });\n  }\n};\nContactComponent = __decorate([Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})], ContactComponent);\nexport { ContactComponent };","map":null,"metadata":{},"sourceType":"module"}